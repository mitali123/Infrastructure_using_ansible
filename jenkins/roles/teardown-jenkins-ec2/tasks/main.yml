---
- name: Find EC2 Facts
  ec2_instance_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
  register: ec2_facts

- name: Set fact 
  set_fact:
    ec2_tag1: "{{ ec2_tag1 | default({}) | combine({ ec2_tag.key:ec2_tag.value }) }}"    


- name: Filter EC2 instance
  set_fact:
    ec2_instances: |
      {% set instances = [] %}
      {% for item in ec2_facts.instances if item.tags == ec2_tag1 -%}
          {{ instances.append(item.instance_id) }}
      {%- endfor  %}
      {{ instances }} 
 
- name: Delete EC2 instance
  ec2:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    instance_ids: "{{ item }}"    
    state: absent
    wait: yes
  with_items: "{{ ec2_instances }}"  

- name: Get VPC Info
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters: 
      "tag:Name": "{{ vpc_name }}"
  register: vpc_info

- name: Delete security group
  ec2_group:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    name: "{{ sg_name }}"
    state: absent

- name: Gather subnet Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"    
    filters:
      "tag:Name": "{{ tag_pub_sub1 }}"
  register: subnet1    

- name: Delete Subnets
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
    cidr: "{{ subnet1_cidr }}"

- name: Gather subnet Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"    
    filters:
      "tag:Name": "{{ tag_pub_sub2 }}"
  register: subnet2    

- name: Delete Subnets
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
    cidr: "{{ subnet2_cidr }}"

- name: Gather subnet Info
  ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"    
    filters:
      "tag:Name": "{{ tag_pub_sub3 }}"
  register: subnet3    

- name: Delete Subnets
  ec2_vpc_subnet:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
    cidr: "{{ subnet3_cidr }}"    

- name: Delete internet gateway
  ec2_vpc_igw:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"

- name: Gather Route Table Info
  ec2_vpc_route_table_info:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    filters:
      "tag:Name": "{{ route_tbl_name }}"
  register: route_tbl_info

- name: Delete Route Table
  ec2_vpc_route_table:
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
    state: absent
    lookup: id
    route_table_id: "{{ route_tbl_info.route_tables[0].id }}"    

- name: Delete VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    cidr_block: "{{ cidr_block }}"
    state: absent